version: "3.8"

services:

  app:
    build:
      context: .
      dockerfile: test.Dockerfile
    container_name: app
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}

      - MYSQL_HOST=mysql
      - MYSQL_USER=${MYSQL_APP_USER}
      - MYSQL_PASSWORD=${MYSQL_APP_PASSWORD}
      - MYSQL_PORT=3306
    ports:
      - "8080:8080"
    volumes:
      - ./database_backups:/app/database_backups
    networks:
      - backups
    depends_on:
      - postgres
      - mysql

  postgres:
    container_name: postgres
    image: postgres:15.4
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGPORT=${POSTGRES_PORT}
    volumes:
      - ./database_scripts/postgres:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - backups

  mysql:
    container_name: mysql
    image: mysql:8.0.33
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./database_scripts/mysql:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - backups

networks:
  backups: